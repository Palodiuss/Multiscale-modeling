{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Patrick\\\\Downloads\\\\react\\\\gameoflife\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Patrick\\\\Downloads\\\\react\\\\gameoflife\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Patrick\\\\Downloads\\\\react\\\\gameoflife\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Patrick\\\\Downloads\\\\react\\\\gameoflife\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Patrick\\\\Downloads\\\\react\\\\gameoflife\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Patrick\\\\Downloads\\\\react\\\\gameoflife\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ButtonToolbar } from 'react-bootstrap';\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main() {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this));\n\n    _this.selectBox = function (row, col) {\n      var gridCopy = arrayClone(_this.state.gridFull);\n      gridCopy[row][col] = !gridCopy[row][col];\n\n      _this.setState({\n        gridFull: gridCopy\n      });\n    };\n\n    _this.seed = function () {\n      var gridCopy = arrayClone(_this.state.gridFull);\n\n      for (var i = 0; i < _this.seeds;) {\n        var x = Math.floor(Math.random() * _this.rows);\n        var y = Math.floor(Math.random() * _this.cols);\n        if (gridCopy[x][y] === false) gridCopy[x][y] = true;\n        i++;\n      }\n\n      _this.setState({\n        gridFull: gridCopy\n      });\n    };\n\n    _this.playButton = function () {\n      clearInterval(_this.intervalId);\n      _this.intervalId = setInterval(_this.play, _this.speed);\n    };\n\n    _this.pauseButton = function () {\n      clearInterval(_this.intervalId);\n    };\n\n    _this.clear = function () {\n      clearInterval(_this.intervalId);\n      var grid = Array(_this.rows).fill().map(function () {\n        return Array(_this.cols).fill(false);\n      });\n\n      _this.setState({\n        gridFull: grid\n      });\n    };\n\n    _this.play = function () {\n      var flag = true;\n      var g = _this.state.gridFull;\n      var g2 = arrayClone(_this.state.gridFull);\n\n      for (var i = 0; i < _this.rows; i++) {\n        for (var j = 0; j < _this.cols; j++) {\n          var count = 0;\n          if (i > 0) if (g[i - 1][j]) count++;\n          if (j < _this.cols - 1) if (g[i][j + 1]) count++;\n          if (j > 0) if (g[i][j - 1]) count++;\n          if (i < _this.rows - 1) if (g[i + 1][j]) count++;\n\n          if (!g[i][j]) {\n            flag = false;\n            if (count > 0) g2[i][j] = true;\n          }\n        }\n      }\n\n      if (flag) clearInterval(_this.intervalId);\n\n      _this.setState({\n        gridFull: g2\n      });\n    };\n\n    _this.speed = 10;\n    _this.rows = 100;\n    _this.cols = 100;\n    _this.seeds = 10;\n    _this.state = {\n      gridFull: Array(_this.rows).fill().map(function () {\n        return Array(_this.cols).fill(false);\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"generateColor\",\n    value: function generateColor() {\n      return '#' + Math.random().toString(16).substr(-6);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"The Game of Life\"), React.createElement(Buttons, {\n        playButton: this.playButton,\n        pauseButton: this.pauseButton,\n        clearButton: this.clear,\n        seedButton: this.seed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        gridFull: this.state.gridFull,\n        rows: this.rows,\n        cols: this.cols,\n        selectBox: this.selectBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nvar Buttons =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Buttons, _React$Component2);\n\n  function Buttons() {\n    _classCallCheck(this, Buttons);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Buttons).apply(this, arguments));\n  }\n\n  _createClass(Buttons, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.playButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Play\"), React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.pauseButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"pause\"), React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.clearButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"clear\"), React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.seedButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"seed\")));\n    }\n  }]);\n\n  return Buttons;\n}(React.Component);\n\nvar Grid =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Grid, _React$Component3);\n\n  function Grid() {\n    _classCallCheck(this, Grid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Grid).apply(this, arguments));\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    value: function render() {\n      var width = this.props.cols * 8;\n      var rowsArr = [];\n      var boxClass = \"\";\n      var boxColor = \"#000\";\n\n      for (var i = 0; i < this.props.rows; i++) {\n        for (var j = 0; j < this.props.cols; j++) {\n          var boxId = i + \"_\" + j;\n          boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n          boxColor = this.props.gridFull[i][j] ? \"#FAB\" : \"#FFF\";\n          rowsArr.push(React.createElement(Box, {\n            boxClass: boxClass,\n            boxColor: boxColor,\n            key: boxId,\n            boxId: boxId,\n            row: i,\n            col: j,\n            selectBox: this.props.selectBox,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        style: {\n          width: width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, rowsArr);\n    }\n  }]);\n\n  return Grid;\n}(React.Component);\n\nvar Box =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(Box, _React$Component4);\n\n  function Box() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, Box);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Box)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this2.selectBox = function () {\n      _this2.props.selectBox(_this2.props.row, _this2.props.col);\n    };\n\n    return _this2;\n  }\n\n  _createClass(Box, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        backgroundColor: this.props.boxColor\n      };\n      return React.createElement(\"div\", {\n        className: this.props.boxClass,\n        id: this.props.boxId,\n        onClick: this.selectBox,\n        style: {\n          style: style\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Box;\n}(React.Component);\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 211\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\Patrick\\Downloads\\react\\gameoflife\\src\\index.js"],"names":["React","ReactDOM","ButtonToolbar","Main","selectBox","row","col","gridCopy","arrayClone","state","gridFull","setState","seed","i","seeds","x","Math","floor","random","rows","y","cols","playButton","clearInterval","intervalId","setInterval","play","speed","pauseButton","clear","grid","Array","fill","map","flag","g","g2","j","count","toString","substr","Component","Buttons","props","clearButton","seedButton","Grid","width","rowsArr","boxClass","boxColor","boxId","push","Box","style","backgroundColor","arr","JSON","parse","stringify","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ButtonToolbar } from 'react-bootstrap';\n\nclass Main extends React.Component {\n  constructor() {\n\t\tsuper();\n\t\tthis.speed = 10;\n\t\tthis.rows = 100;\n    this.cols = 100;\n    this.seeds = 10;\n    \n\n\t\tthis.state = {\n\t\t\tgridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n\t\t}\n  }\n  \n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy\n    })\n  }\n\n  seed = () => {\n    \n    let gridCopy = arrayClone(this.state.gridFull);\n    for (let i=0; i<this.seeds; ) {\n      let x = Math.floor(Math.random() * this.rows);\n      let y = Math.floor(Math.random() * this.cols);\n\n      if (gridCopy[x][y] === false)\n        gridCopy[x][y] = true;\n        i++;\n    }\n\n    this.setState({\n      gridFull:  gridCopy\n    })\n  }\n\n  playButton = () => {\n    clearInterval(this.intervalId)\n    this.intervalId = setInterval(this.play, this.speed);\n  }\n\n  pauseButton = () => {\n    clearInterval(this.intervalId);\n  }\n\n  clear = () => {\n    clearInterval(this.intervalId);\n    let grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false));\n    this.setState({\n      gridFull: grid,\n   })\n  }\n\n  play = () => {\n    let flag = true;\n    let g = this.state.gridFull;\n    let g2 = arrayClone(this.state.gridFull);\n\n    \n    for (let i = 0; i < this.rows; i++) {\n\t\t  for (let j = 0; j < this.cols; j++) {\n        let count = 0;\n        \n\t\t    if (i > 0) if (g[i - 1][j]) count++;\n\t\t    if (j < this.cols - 1) if (g[i][j + 1]) count++;\n\t\t    if (j > 0) if (g[i][j - 1]) count++;\n\t\t    if (i < this.rows - 1) if (g[i + 1][j]) count++;\n\t\n\t\n        if (!g[i][j]) \n        {\n          flag = false;\n          if (count > 0)\n            g2[i][j] = true;\n        }\n      }\n    }\n\n    if (flag) clearInterval(this.intervalId);\n    \n  \n\t\tthis.setState({\n      gridFull: g2,\n    });\n  }\n  \n  generateColor () {\n    return '#' +  Math.random().toString(16).substr(-6);\n  }\n\n  \n\n\n\n  render () {\n    return (\n      <div>\n        <h1>The Game of Life</h1>\n        <Buttons \n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          clearButton={this.clear}\n          seedButton={this.seed}        \n        />\n\t\t\t\t<Grid\n\t\t\t\t\tgridFull={this.state.gridFull}\n\t\t\t\t\trows={this.rows}\n\t\t\t\t\tcols={this.cols}\n\t\t\t\t\tselectBox={this.selectBox}\n\t\t\t\t/>\n      </div>\n    )\n  }\n}\n\nclass Buttons extends React.Component {\n  render() {\n    return (\n      <div className=\"center\">\n        <ButtonToolbar>\n            <button className=\"btn btn-default\" onClick={this.props.playButton}>\n              Play\n            </button>\n            <button className=\"btn btn-default\" onClick={this.props.pauseButton}>\n              pause\n            </button>\n            <button className=\"btn btn-default\" onClick={this.props.clearButton}>\n              clear\n            </button>\n            <button className=\"btn btn-default\" onClick={this.props.seedButton}>\n            seed\n            </button>\n          </ButtonToolbar>        \n      </div>\n    )\n  }\n}\n\nclass Grid extends React.Component {\n\trender() {\n\t\tconst width = (this.props.cols * 8);\n\t\tvar rowsArr = [];\n\n    var boxClass = \"\";\n    var boxColor = \"#000\";\n\t\tfor (var i = 0; i < this.props.rows; i++) {\n\t\t\tfor (var j = 0; j < this.props.cols; j++) {\n\t\t\t\tlet boxId = i + \"_\" + j;\n\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n        boxColor = this.props.gridFull[i][j] ? \"#FAB\" : \"#FFF\";\n        \n\t\t\t\trowsArr.push(\n\t\t\t\t\t<Box\n            boxClass={boxClass}\n            boxColor={boxColor}\n\t\t\t\t\t\tkey={boxId}\n\t\t\t\t\t\tboxId={boxId}\n\t\t\t\t\t\trow={i}\n\t\t\t\t\t\tcol={j}\n\t\t\t\t\t\tselectBox={this.props.selectBox}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"grid\" style={{width: width}}>\n\t\t\t\t{rowsArr}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Box extends React.Component {\n\tselectBox = () => {\n\t\tthis.props.selectBox(this.props.row, this.props.col);\n\t}\n\n\trender() {\n    let style = {\n      backgroundColor: this.props.boxColor\n    }\n\t\treturn (\n\t\t\t<div\n        className={this.props.boxClass}\n        \n\t\t\t\tid={this.props.boxId}\n        onClick={this.selectBox}\n\n        style={{style}}\n        \n\t\t\t/>\n\t\t);\n\t}\n}\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}